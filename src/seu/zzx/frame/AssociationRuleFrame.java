/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package seu.zzx.frame;

import java.io.File;
import java.io.FileWriter;
import java.io.Writer;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import seu.zzx.constant.ConstantLibrary;
import seu.zzx.dbc.EditTable;
import seu.zzx.panel.AssociationRulePane;
import seu.zzx.rule.FPTree;
import seu.zzx.util.ProcessBar;

/**
 *
 * @author zzx_seu
 */
public class AssociationRuleFrame extends javax.swing.JFrame {

    /**
     * Creates new form AssociationRuleFrame
     */
    public AssociationRuleFrame(MainFunction mf) {
        this.mf = mf;
        initComponents();
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("支持度：");

        jButton1.setText("确定");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("置信度：");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField2)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        float support = 0.0f;
        float confidence = 0.0f;
        try{
            support = Float.parseFloat(this.jTextField1.getText());
            confidence = Float.parseFloat(this.jTextField2.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"请输入0到1之间的小数!", "错误信息", JOptionPane.ERROR_MESSAGE);
            return ;
        }
        if(support<=0||support>1||confidence<=0||confidence>1){
            JOptionPane.showMessageDialog(this,"请输入0到1之间的小数!", "错误信息", JOptionPane.ERROR_MESSAGE);
            return ;
        }
        this.dispose();
        Thread thread = new Thread() {
            public void run() {
                ConstantLibrary.columnNameTemp = EditTable.getColumnNamesTempArray(ConstantLibrary.MERGETABLENAME);
                ConstantLibrary.columnNames = EditTable.getColumnNamesArray(ConstantLibrary.MERGETABLENAME);
                ConstantLibrary.data = EditTable.getDataArray(ConstantLibrary.MERGETABLENAME);
                ConstantLibrary.data1 = new String[ConstantLibrary.data.length][ConstantLibrary.data[0].length];
                double temp=0;
                for (int i = 0; i < ConstantLibrary.data.length; ++i) {
                    for (int j = 0; j < ConstantLibrary.data[i].length; ++j) {
                        if (ConstantLibrary.ISLOSTEDFLAGINDEX != j) {
                            try{
                                temp = Double.parseDouble(ConstantLibrary.data[i][j]);
                            }catch(Exception e){
                                ConstantLibrary.data1[i][j] = ConstantLibrary.data[i][j];
                                continue;
                            }
                            if (temp <= -100) {
                                ConstantLibrary.data1[i][j] = "-10";
                            }else if(temp>-100&&temp<=-90){
                                ConstantLibrary.data1[i][j] = "-9";
                            } else if (temp > -90 && temp <= -80) {
                                ConstantLibrary.data1[i][j] = "-8";
                            } else if (temp > -80 && temp <= -70) {
                                ConstantLibrary.data1[i][j] = "-7";
                            } else if (temp > -70 && temp <= -60) {
                                ConstantLibrary.data1[i][j] = "-6";
                            } else if (temp > -60 && temp <= -50) {
                                ConstantLibrary.data1[i][j] = "-5";
                            } else if (temp > -50 && temp <= -40) {
                                ConstantLibrary.data1[i][j] = "-4";
                            } else if (temp > -40 && temp <= -30) {
                                ConstantLibrary.data1[i][j] = "-3";
                            } else if (temp > -30 && temp <= -20) {
                                ConstantLibrary.data1[i][j] = "-2";
                            } else if (temp > -20 && temp <= -10) {
                                ConstantLibrary.data1[i][j] = "-1";
                            } else if (temp > -10 && temp <= 0) {
                                ConstantLibrary.data1[i][j] = "0";
                            } else if (temp > 0 && temp <= 10) {
                                ConstantLibrary.data1[i][j] = "1";
                            } else if (temp > 10 && temp <= 20) {
                                ConstantLibrary.data1[i][j] = "2";
                            } else if (temp > 20 && temp <= 30) {
                                ConstantLibrary.data1[i][j] = "3";
                            } else if (temp > 30 && temp <= 40) {
                                ConstantLibrary.data1[i][j] = "4";
                            } else if (temp > 40 && temp <= 50) {
                                ConstantLibrary.data1[i][j] = "5";
                            } else if (temp > 50 && temp <= 60) {
                                ConstantLibrary.data1[i][j] = "6";
                            } else if (temp > 60 && temp <= 70) {
                                ConstantLibrary.data1[i][j] = "7";
                            } else if (temp > 70 && temp <= 80) {
                                ConstantLibrary.data1[i][j] = "8";
                            } else if (temp > 80 && temp <= 90) {
                                ConstantLibrary.data1[i][j] = "9";
                            } else if (temp > 90) {
                                ConstantLibrary.data1[i][j] = "10";
                            }
                        } else {
                            ConstantLibrary.data1[i][j] = ConstantLibrary.data[i][j];
                        }
                    }
                }
                try{
                    File fileDir = new File(ConstantLibrary.associationFilePath01);
                    if(!fileDir.exists()&&!fileDir.isDirectory()){
                        fileDir.mkdir();
                    }
                    File file = new File("trolley.txt");
                    Writer out = new FileWriter(file);
                    for(int i=0;i<ConstantLibrary.data1.length;++i){
                        int j = 0;
                        for(j=0;j<ConstantLibrary.data1[i].length-1;++j){
                            out.write(ConstantLibrary.data1[i][j]+"#"+j+",");
                        }
                        out.write(ConstantLibrary.data1[i][j]+"#"+j+"\r\n");
                    }
                    out.close();
                    float support = Float.parseFloat(jTextField1.getText());
                    float confidence = Float.parseFloat(jTextField2.getText());
                    int sup = (int)(ConstantLibrary.record * support);
                    FPTree.getRule(sup,confidence);
                }catch(Exception e){
                    
                }
            }
        };
        //显示进度条测试对话框
        ProcessBar.show(mf, thread, "正在生成。。。", "规则生成！", "Cancel");
        this.mf.getjSplitPane1().setRightComponent(new AssociationRulePane(this.mf));
    }//GEN-LAST:event_jButton1ActionPerformed

    private MainFunction mf;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}

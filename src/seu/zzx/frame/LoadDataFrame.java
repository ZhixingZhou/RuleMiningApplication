/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package seu.zzx.frame;

import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import seu.zzx.constant.ConstantLibrary;
import seu.zzx.dbc.DatabaseConnection;
import seu.zzx.dbc.EditTable;
import seu.zzx.panel.DataSourceInfoPanel;
import seu.zzx.util.OperateFile;

/**
 *
 * @author zzx_seu
 */
public class LoadDataFrame extends JFrame implements ComponentListener{

    /**
     * Creates new form LoadDataFrame
     */
    public LoadDataFrame(MainFunction mf) {
        this.mf = mf;
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.addComponentListener(this);
        this.setVisible(true);
        
        DefaultTableCellRenderer hr = (DefaultTableCellRenderer) this.jTable1.getTableHeader().getDefaultRenderer(); 
        hr.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);//列名居中  
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();// 设置table内容居中
        tcr.setHorizontalAlignment(SwingConstants.CENTER);// 这句和上句作用一样  
        this.jTable1.setDefaultRenderer(Object.class, tcr);  
        this.jTable1.setShowGrid(true);
        
        this.jList1.setModel(this.frontModel);
        this.jList2.setModel(this.BackModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("数据库用户名：");

        jLabel2.setText("数据库密码：");

        jLabel3.setText("数据源：");

        jButton1.setText("选择");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("确定");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jList1.setBackground(new java.awt.Color(214, 217, 223));
        jList1.setBorder(javax.swing.BorderFactory.createTitledBorder("前键"));
        jScrollPane2.setViewportView(jList1);

        jButton3.setText("下移");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jList2.setBackground(new java.awt.Color(214, 217, 223));
        jList2.setBorder(javax.swing.BorderFactory.createTitledBorder("后键"));
        jScrollPane3.setViewportView(jList2);

        jButton4.setText("上移");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(309, 309, 309))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton1))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPasswordField1)
                                .addComponent(jTextField1))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jButton2)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if("".equals(this.jTextField1.getText())||null==this.jTextField1.getText()){
            JOptionPane.showMessageDialog(this,"请输入数据库用户名！", "警告信息", JOptionPane.ERROR_MESSAGE);
            return ;
        }
        if("".equals(this.jPasswordField1.getText())||null==this.jPasswordField1.getText()){
            JOptionPane.showMessageDialog(this,"请输入数据库密码！", "警告信息", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ConstantLibrary.USERNAME = this.jTextField1.getText();
        ConstantLibrary.PASSWORD = this.jPasswordField1.getText();
        try{
            Class.forName(ConstantLibrary.DRIVER);
            this.conn = DriverManager.getConnection("jdbc:mysql://localhost:3306", ConstantLibrary.USERNAME, ConstantLibrary.PASSWORD);
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,"数据库用户名或密码错误！", "错误信息", JOptionPane.ERROR_MESSAGE);
            return;
        }
        JFileChooser chooser = new JFileChooser();			//文件选择器
        chooser.setMultiSelectionEnabled(false);			//单选模式
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files (.xls, .xlsx)", "xls", "xlsx");//文件类型过滤器
        chooser.setFileFilter(filter);
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setDialogTitle("请选择数据源文件");
        int result = chooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            this.jTextField2.setText(file.toString());
            String fileName = file.toString();
            OperateFile.openExcel(fileName);
            int rowCount = OperateFile.getRowCount(0);
            int colCount = OperateFile.getColCount(0);
            ConstantLibrary.record = rowCount;
            ConstantLibrary.data = new String[rowCount][colCount];
            ConstantLibrary.columnNames = new String[colCount];
            ConstantLibrary.columnNameTemp = new String[colCount];
            for (int cj = 0; cj < colCount; ++cj) {
                ConstantLibrary.columnNames[cj] = OperateFile.getCellContent(cj, 0);
                String str = "column" + (cj+1);
                ConstantLibrary.columnNameTemp[cj] = str;
                ConstantLibrary.columnMap.put(str, ConstantLibrary.columnNames[cj]);
                ConstantLibrary.columnMap2.put(ConstantLibrary.columnNames[cj], str);
            }
            for (int i = 1; i <= rowCount; i++) {
                for (int j = 0; j < colCount; j++) {
                    ConstantLibrary.data[i - 1][j] = OperateFile.getCellContent(j, i);
                }
            }
            
            DefaultTableModel dtModel = new DefaultTableModel(ConstantLibrary.data,ConstantLibrary.columnNames);
            this.jTable1.setModel(dtModel);
                        
        } else {

        }
        for(int i=0;i<ConstantLibrary.columnNames.length;++i){
            this.frontModel.addElement(ConstantLibrary.columnNames[i]);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //this.dispatchEvent(new WindowEvent(this,WindowEvent.WINDOW_CLOSING));
        if("".equals(ConstantLibrary.ISLOSTEDFLAG)||this.jList2.getModel().getSize()==0){
            JOptionPane.showMessageDialog(this, "请选择后键！", "错误信息", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ConstantLibrary.ISLOSTEDFLAGTEMP = ConstantLibrary.columnMap2.get(ConstantLibrary.ISLOSTEDFLAG);
        this.dispose();
        String sql = "create database if not exists dataminingdb";
        PreparedStatement pstmt = null;
        try{
            pstmt = this.conn.prepareStatement(sql);
            pstmt.executeUpdate();
            EditTable.createTable(ConstantLibrary.MERGETABLENAME, ConstantLibrary.columnNameTemp);
            EditTable.importDataToDB(ConstantLibrary.MERGETABLENAME, ConstantLibrary.data);
        }catch(Exception e){
            e.printStackTrace();
        }
        EditTable.getIsFlowAwayValue(ConstantLibrary.ISLOSTEDFLAGTEMP);
        ConstantLibrary.dsip = new DataSourceInfoPanel(this.mf);
        this.mf.getjSplitPane1().setLeftComponent(null);
        this.mf.getjSplitPane1().setRightComponent(ConstantLibrary.dsip);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (this.jList2.getModel().getSize() == 0) {
            this.BackModel.addElement(this.jList1.getSelectedValue());
            ConstantLibrary.ISLOSTEDFLAG = this.jList1.getSelectedValue();
            this.frontModel.removeElement(ConstantLibrary.ISLOSTEDFLAG);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (this.jList2.getModel().getSize() != 0 && this.jList2.getSelectedIndices().length !=0) {
            this.frontModel.addElement(ConstantLibrary.ISLOSTEDFLAG);
            this.BackModel.clear();
            ConstantLibrary.ISLOSTEDFLAG="";
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    DefaultListModel frontModel = new DefaultListModel();
    DefaultListModel BackModel = new DefaultListModel();
    private MainFunction mf = null;
    private Connection conn = null;
    private DatabaseConnection dc = new DatabaseConnection();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentResized(ComponentEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        int width = this.getWidth();
        int height = this.getHeight();
        int remain = width*2/3;
        this.jTextField1.setSize(remain-this.jLabel1.getWidth()-30, this.jTextField1.getHeight());
        this.jPasswordField1.setSize(this.jTextField1.getWidth(), this.jPasswordField1.getHeight());
        this.jTextField2.setSize(this.jTextField1.getWidth()-this.jButton1.getWidth()+10, this.jTextField2.getHeight());
        this.jButton1.setLocation(this.jLabel3.getWidth()+this.jTextField2.getWidth()+30, this.jButton1.getY());
        this.jScrollPane1.setSize((width-30)*2/3, height-250);
        this.jTable1.setSize(this.jScrollPane1.getWidth(),this.jScrollPane1.getHeight());
        this.jButton2.setLocation(width/2-this.jButton2.getWidth()/2, height-this.jButton2.getHeight()-70);
        this.jPanel1.setLocation(this.jScrollPane1.getWidth()+20, this.jTextField1.getY());
        this.jPanel1.setSize(width-this.jScrollPane1.getWidth()-50, height-120);
        this.jScrollPane2.setSize(this.jPanel1.getWidth()-20, this.jPanel1.getHeight()/2);
        this.jButton3.setLocation(this.jPanel1.getWidth()/4-this.jButton3.getWidth()/2, this.jScrollPane2.getHeight()+30);
        this.jButton4.setLocation(this.jPanel1.getWidth()*3/4-this.jButton4.getWidth()/2, this.jButton3.getY());
        this.jScrollPane3.setLocation(this.jScrollPane2.getX(), this.jButton3.getY()+this.jButton3.getHeight()+30);
        this.jScrollPane3.setSize(this.jScrollPane2.getWidth(), this.jScrollPane2.getHeight()-this.jButton3.getHeight()-70);
        /*
        this.jScrollPane2.setLocation(this.jScrollPane1.getWidth()+20, this.jTextField1.getY());
        this.jScrollPane2.setSize(width-this.jScrollPane2.getX()-10, (height-this.jButton3.getWidth()*3)*3/4-20);
        this.jButton3.setLocation(this.jScrollPane1.getWidth()+100, (height-this.jButton3.getWidth()*3)*3/4);
        this.jButton4.setLocation(this.jScrollPane1.getWidth()+200, this.jButton3.getY());
        this.jScrollPane3.setLocation(this.jScrollPane1.getWidth()+20, this.jButton3.getY()+this.jButton3.getHeight());
        this.jScrollPane3.setSize(this.jScrollPane2.getWidth(), (height-this.jButton3.getWidth()*3)*1/4-5);
*/
    }

    @Override
    public void componentMoved(ComponentEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void componentShown(ComponentEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void componentHidden(ComponentEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
